{"version":3,"sources":["index.tsx"],"names":["txtToken","document","body","appendChild","createElement","id","style","display","onchange","e","Streamlit","setComponentValue","target","value","events","addEventListener","RENDER_EVENT","event","data","detail","disabled","setFrameHeight","setComponentReady"],"mappings":"6KAAA,kBAKMA,EADOC,SAASC,KAAKC,YAAYF,SAASG,cAAc,SACxCD,YAAYF,SAASG,cAAc,UACzDJ,EAASK,GAAK,WACdL,EAASM,MAAMC,QAAU,OAKzBP,EAASQ,SAAW,SAASC,GAG3BC,IAAUC,kBAAkBF,EAAEG,OAAOC,QAuBvCH,IAAUI,OAAOC,iBAAiBL,IAAUM,cAf5C,SAAkBC,GAEhB,IAAMC,EAAQD,EAAkCE,OAGhDnB,EAASoB,SAAWF,EAAKE,SAMzBV,IAAUW,oBAQZX,IAAUY,oBAIVZ,IAAUW,mB","file":"static/js/main.6a1b370f.chunk.js","sourcesContent":["import { Streamlit, RenderData } from \"streamlit-component-lib\"\r\n\r\n// Add text and a button to the DOM. (You could also add these directly\r\n// to index.html.)\r\nconst span = document.body.appendChild(document.createElement(\"span\"))\r\nconst txtToken = span.appendChild(document.createElement(\"input\"))\r\ntxtToken.id = \"txtToken\"\r\ntxtToken.style.display = \"none\"\r\n\r\n\r\n\r\n// Add a click handler to our button. It will send data back to Streamlit.\r\ntxtToken.onchange = function(e: any): void {\r\n  // Increment numClicks, and pass the new value back to\r\n  // Streamlit via `Streamlit.setComponentValue`.\r\n  Streamlit.setComponentValue(e.target.value)\r\n}\r\n\r\n/**\r\n * The component's render function. This will be called immediately after\r\n * the component is initially loaded, and then again every time the\r\n * component gets new data from Python.\r\n */\r\nfunction onRender(event: Event): void {\r\n  // Get the RenderData from the event\r\n  const data = (event as CustomEvent<RenderData>).detail\r\n\r\n  // Disable our button if necessary.\r\n  txtToken.disabled = data.disabled\r\n\r\n  // We tell Streamlit to update our frameHeight after each render event, in\r\n  // case it has changed. (This isn't strictly necessary for the example\r\n  // because our height stays fixed, but this is a low-cost function, so\r\n  // there's no harm in doing it redundantly.)\r\n  Streamlit.setFrameHeight()\r\n}\r\n\r\n// Attach our `onRender` handler to Streamlit's render event.\r\nStreamlit.events.addEventListener(Streamlit.RENDER_EVENT, onRender)\r\n\r\n// Tell Streamlit we're ready to start receiving data. We won't get our\r\n// first RENDER_EVENT until we call this function.\r\nStreamlit.setComponentReady()\r\n\r\n// Finally, tell Streamlit to update our initial height. We omit the\r\n// `height` parameter here to have it default to our scrollHeight.\r\nStreamlit.setFrameHeight()\r\n"],"sourceRoot":""}